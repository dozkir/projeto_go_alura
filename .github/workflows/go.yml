# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Continuous Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Inicia banco
      run: docker compose up -d postgres

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.1
        args: controllers/ database/ models/ routes/

    - name: Test
      run: DB_HOST=${{ secrets.DB_HOST }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USER=${{ secrets.DB_USER }} DB_NAME=${{ secrets.DB_NAME }} DB_PORT=${{ secrets.DB_PORT }} go test -v main_test.go

    - name: Build do projeto
      run: go build main.go
    
    - name: Projeto compilado
      uses: actions/upload-artifact@v4
      with:
        name: projeto-go-compilado
        path: main

    # - name: Run tests in container
    #   env:
    #     DB_USER: ${{ secrets.DB_USER }}
    #     DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #     DB_NAME: ${{ secrets.DB_NAME }}
    #     DB_PORT: ${{ secrets.DB_PORT }}
    #   run: |
    #     docker compose run --rm \
    #       -e DB_USER=$DB_USER \
    #       -e DB_PASSWORD=$DB_PASSWORD \
    #       -e DB_NAME=$DB_NAME \
    #       -e DB_PORT=$DB_PORT \
    #       test